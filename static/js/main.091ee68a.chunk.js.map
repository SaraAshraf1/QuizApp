{"version":3,"sources":["Components/Questionare.js","App.js","reportWebVitals.js","index.js"],"names":["Questionare","answer","correctAnswer","this","props","showAnswer","question","response","currentQuestion","correct_answer","answers","chars","showScore","className","justify-content-center","score","length","dangerouslySetInnerHTML","__html","map","i","colorButton","onClick","handleAnswerOptionClick","type","handleNextQuestionClick","Component","library","add","faCheckSquare","faCoffee","App","useState","setResponse","setCurrentQuestion","setShowScore","setScore","setShowAnswer","useEffect","fetch","then","res","json","data","results","incorrect_answers","sort","Math","random","isCorrect","nextQuestion","style","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSA2DeA,E,0KAzDDC,EAAOC,GAOjB,OAJGC,KAAKC,MAAMC,YAAcJ,IAASC,EAC5B,kBAEA,Q,+BAGC,IAAD,OACCI,EAASH,KAAKC,MAAMG,SAASJ,KAAKC,MAAMI,iBAAiBF,SACzDJ,EAAcC,KAAKC,MAAMG,SAASJ,KAAKC,MAAMI,iBAAiBC,eAC9DC,EAAQP,KAAKC,MAAMG,SAASJ,KAAKC,MAAMI,iBAAiBE,QACxDC,EAAM,CAAC,KAAK,KAAK,KAAK,MAChC,OACJR,KAAKC,MAAMQ,UACP,qBAAKC,UAAU,6CAAf,SACU,qBAAIC,0BAAA,EAAJ,wBACgBX,KAAKC,MAAMW,MAD3B,WAC0CZ,KAAKC,MAAMG,SAASS,YAI9D,qCACZ,sBAAKH,UAAU,oCAAf,UAEE,sBAAKA,UAAU,0BAAf,sBACYV,KAAKC,MAAMI,gBAAgB,EADvC,MAEE,oBAAIS,wBAAyB,CAACC,OAAOZ,QAEvC,qBAAKO,UAAU,YAAf,SACA,+BAECH,EAAQS,KAAI,SAAClB,EAAOmB,GACrB,OACA,qBAAKP,UAAU,aAAf,SACI,yBAAQA,UAAW,EAAKQ,YAAYpB,EAAOC,GAC1CoB,QAAU,kBAAK,EAAKlB,MAAMmB,wBAAwBtB,IAASC,IAC3DsB,KAAK,SAFN,UAGI,mCAASb,EAAMS,GAAf,OAHJ,IAGiC,sBAAMH,wBAAyB,CAACC,OAAOjB,oBAW3EE,KAAKC,MAAMC,YACR,wBAAQQ,UAAU,kBAAkBS,QAAS,kBAAI,EAAKlB,MAAMqB,2BAA5D,kC,GAnDkBC,aCO1BC,IAAQC,IAAKC,IAAeC,KAqDbC,MAlDf,WAAgB,IAAD,EACgBC,mBAAS,IADzB,mBACNzB,EADM,KACG0B,EADH,OAE+BD,mBAAS,GAFxC,mBAERxB,EAFQ,KAES0B,EAFT,OAGmBF,oBAAS,GAH5B,mBAGRpB,EAHQ,KAGGuB,EAHH,OAIWH,mBAAS,GAJpB,mBAIRjB,EAJQ,KAIDqB,EAJC,OAKqBJ,oBAAS,GAL9B,mBAKR3B,EALQ,KAKIgC,EALJ,KAuCb,OA/BFC,qBAAU,WACRC,MAFW,mFAGXC,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAAQF,MAAK,SAACG,GAC7B,IAAMF,EAAIE,EAAKC,QAAQzB,KAAI,SAACb,GAAD,mBAAC,eAAgBA,GAAjB,IAC1BI,QAAQ,CAACJ,EAASG,gBAAV,mBAA4BH,EAASuC,oBAAmBC,MAAK,kBAAIC,KAAKC,SAAS,WAEzFf,EAAYQ,QAEX,IAuBMlC,EAASS,OAAO,EAGrB,qBAAKH,UAAU,YAAf,SACH,cAAC,EAAD,CAAaN,SAAWA,EAAUK,UAAWA,EAAWG,MAAOA,EAAOV,WAAYA,EAClFG,gBAAiBA,EAAiBe,wBA1BF,SAAC0B,GAE1BA,GACAb,EAASrB,EAAQ,GAEjBsB,GAAc,IAqB+DZ,wBAhBnD,WAC9BY,GAAc,GACd,IAAMa,EAAe1C,EAAkB,EACnC0C,EAAe3C,EAASS,OACxBkB,EAAmBgB,GAEnBf,GAAa,QAahB,oBAAItB,UAAU,yBAAyBsC,MAAO,CAACC,UAAW,OAA1D,2BC9CUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.091ee68a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass Questionare extends Component  {\r\n  colorButton(answer,correctAnswer)\r\n  {\r\n      let btnColor='';\r\n    if(this.props.showAnswer && answer===correctAnswer)\r\n    btnColor='btn btn-success';\r\n    else\r\n    btnColor='btn';\r\n    return btnColor;\r\n  }\r\n    render() {\r\n        const question=this.props.response[this.props.currentQuestion].question;\r\n        const correctAnswer=this.props.response[this.props.currentQuestion].correct_answer;\r\n        const answers=this.props.response[this.props.currentQuestion].answers;\r\n        const chars=['A.','B.','C.','D.'];\r\n    return(\r\nthis.props.showScore ? (\r\n    <div className=\"card justify-content-center mt-5 cardfinal\"  >\r\n              <h1 justify-content-center>\r\n                  You scored {this.props.score} out of {this.props.response.length}\r\n              </h1>\r\n      </div>\r\n          ) : (\r\n              <>\r\n  <div className=\"card justify-content-center mt-5 \"  >\r\n \r\n    <div className=\"card-header text-center\">\r\n      question {this.props.currentQuestion+1}/10\r\n      <h4 dangerouslySetInnerHTML={{__html:question}}/> \r\n    </div>\r\n    <div className=\"card-body\">\r\n    <form >\r\n\r\n    {answers.map((answer,i)=>{\r\n    return( \r\n    <div className=\"form-group\">\r\n        <button className={this.colorButton(answer,correctAnswer)}\r\n         onClick={ () =>this.props.handleAnswerOptionClick(answer===correctAnswer)} \r\n         type=\"button\">\r\n            <strong>{chars[i]} </strong> <span dangerouslySetInnerHTML={{__html:answer}}/></button>\r\n        </div>\r\n        );\r\n        \r\n        }\r\n        )}    \r\n </form>\r\n \r\n    </div>\r\n   \r\n    </div>\r\n    {this.props.showAnswer&&(\r\n        <button className='btn btn-primary' onClick={()=>this.props.handleNextQuestionClick()}>Next Question</button>\r\n    )}\r\n    \r\n    </>\r\n    ))\r\n          }\r\n          }\r\nexport default Questionare;","\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckSquare, faCoffee } from '@fortawesome/free-solid-svg-icons'\nimport { useEffect, useState } from 'react';\nimport Questionare from \"./Components/Questionare\";\n \nlibrary.add( faCheckSquare, faCoffee)\n\n\nfunction App() {\n  const [response,setResponse]=useState([]);\nconst [currentQuestion, setCurrentQuestion] = useState(0);\nconst [showScore, setShowScore] = useState(false);\nconst [score, setScore] = useState(0);\nconst [showAnswer, setShowAnswer] = useState(false);\n\nconst apiURL=\"https://opentdb.com/api.php?amount=10&category=18&difficulty=easy&type=multiple\";\nuseEffect(()=>{\n  fetch(apiURL)\n .then((res)=>res.json()).then((data)=>{\n   const res=data.results.map((question)=>({...question,\n    answers:[question.correct_answer,...question.incorrect_answers].sort(()=>Math.random()-0.5)\n  }));\n  setResponse(res);\n });\n}, []);\n\n const handleAnswerOptionClick = (isCorrect) => {\n\n    if (isCorrect) {\n        setScore(score + 1); \n    }\n        setShowAnswer(true)\n    \n    \n    \n  };\n  const handleNextQuestionClick = () => {\n    setShowAnswer(false)\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < response.length) {\n        setCurrentQuestion(nextQuestion);\n    } else {\n        setShowScore(true);\n    }\n  };\n\n\n  return response.length>0? (\n\n    \n    <div className=\"container\">\n <Questionare response ={response} showScore={showScore} score={score} showAnswer={showAnswer}\n currentQuestion={currentQuestion} handleAnswerOptionClick={handleAnswerOptionClick} handleNextQuestionClick={handleNextQuestionClick}></Questionare>\n  </div>\n\n  ):(<h2 className=\"text-white text-center\" style={{marginTop: \"20%\"}}>loading.....</h2>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}